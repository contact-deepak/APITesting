name: Run Postman Collection Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-postman-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js (v18)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Newman
        run: npm install -g newman 

      - name: AdmissionCriteria
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run AdmissionCriteria.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export AdmissionCriteria.xml
        continue-on-error: true  

      - name: Upload JUnit report for AdmissionCriteria
        uses: actions/upload-artifact@v3
        with:
          name: AdmissionCriteria
          path: AdmissionCriteria.xml
          
      - name: Country
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run Country.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export Country.xml
        continue-on-error: true  

      - name: Upload JUnit report for Country
        uses: actions/upload-artifact@v3
        with:
          name: Country
          path: Country.xml

      - name: CourseTime
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run CourseTime.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export CourseTime.xml
        continue-on-error: true  

      - name: Upload JUnit report for CourseTime
        uses: actions/upload-artifact@v3
        with:
          name: CourseTime
          path: CourseTime.xml   

      - name: CourseType
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run CourseType.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export CourseType.xml
        continue-on-error: true  

      - name: Upload JUnit report for CourseType
        uses: actions/upload-artifact@v3
        with:
          name: CourseType
          path: CourseType.xml  

      - name: Currency
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run Currency.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export Currency.xml
        continue-on-error: true  

      - name: Upload JUnit report for Currency
        uses: actions/upload-artifact@v3
        with:
          name: Currency
          path: Currency.xml     

      - name: Department
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run Department.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export Department.xml
        continue-on-error: true  

      - name: Upload JUnit report for Department
        uses: actions/upload-artifact@v3
        with:
          name: Department
          path: Department.xml    

      - name: Facility
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run Facility.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export Facility.xml
        continue-on-error: true  

      - name: Upload JUnit report for Facility
        uses: actions/upload-artifact@v3
        with:
          name: Facility
          path: Facility.xml    

      - name: JobRole
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run JobRole.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export JobRole.xml
        continue-on-error: true  

      - name: Upload JUnit report for JobRole
        uses: actions/upload-artifact@v3
        with:
          name: JobRole
          path: JobRole.xml    

      - name: Rank
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run Rank.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export Rank.xml
        continue-on-error: true  

      - name: Upload JUnit report for Rank
        uses: actions/upload-artifact@v3
        with:
          name: Rank
          path: Rank.xml    

      - name: Shortlists
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run Shortlists.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export Shortlists.xml
        continue-on-error: true  

      - name: Upload JUnit report for Shortlists
        uses: actions/upload-artifact@v3
        with:
          name: Shortlists
          path: Shortlists.xml    

      - name: TestScore
        # Continue even if the newman command fails (test failures)
        env:
          TOKEN: ${{ secrets.TOKEN }} # Inject secret token
          URL: ${{ secrets.URL }}
        run: |
          newman run TestScore.json --reporters cli,junit \
          --env-var "url=$URL" \
          --env-var "token=$TOKEN" \
          --reporter-junit-export TestScore.xml
        continue-on-error: true  

      - name: Upload JUnit report for TestScore
        uses: actions/upload-artifact@v3
        with:
          name: TestScore
          path: TestScore.xml    
